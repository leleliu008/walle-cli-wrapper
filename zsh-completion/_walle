#compdef walle

_commands=(
    '-h:show walle command line help.'
    '--help:show walle command line help.'
    '-v:show walle version.'
    '--version:show walle version.'
    'batch:channel apk batch production method 1.'
    'batch2:channel apk batch production method 2.'
    'show:get channel info from apk and show all by default.'
    'put:put channel info into apk.'
    'rm:remove channel info for apk.'
)

function _walle_commands() {
    _describe 'command' _commands
}

function _walle() {
    local context state state_descr line
    typeset -A opt_args

    _arguments \
        '1: :_walle_commands' \
        '*:: :->option'

    case $state in
        option)
            case $words[1] in
                rm)
                    _arguments '*: :_files -g "*.apk"'
                    ;;
                put)
                    _arguments \
                        '(--channel -c)-c[set single channel]:channel-name:(channelName)' \
                        '(--channel -c)--channel[set single channel]:channel-name:(channnelName)' \
                        '(--extraInfo -e)-e[Comma-separated list of key=value info, eg: -e time=1,type=android.]: :(key1=value2,key2=value2)' \
                        '(--extraInfo -e)--extraInfo[Comma-separated list of key=value info, eg: -e time=1,type=android.]: :(key1=value2,key2=value2)' \
                        ':inputFile:_files -g "*.apk"' \
                        ':outputFile:_files -/'
                    ;;
                show)
                    _arguments \
                        '(--channel -c)-c[set single channel]:channel-name:(channelName)' \
                        '(--channel -c)--channel[set single channel]:channel-name:(channnelName)' \
                        '(--extraInfo -e)-e[Comma-separated list of key=value info, eg: -e time=1,type=android.]: :(key1=value2,key2=value2)' \
                        '(--extraInfo -e)--extraInfo[Comma-separated list of key=value info, eg: -e time=1,type=android.]: :(key1=value2,key2=value2)' \
                        '(--raw -r)-r[get raw string from Channel id]' \
                        '(--raw -r)--raw[get raw string from Channel id]' \
                        '*:inputFile:_files -g "*.apk"'
                    ;;
                batch2)
                    _arguments \
                        '(--configFile -f)-f[json format config file]:config-file:_files' \
                        '(--configFile -f)--configFile[json format config file]:config-file:_files' \
                        ':inputFile:_files -g "*.apk"' \
                        '::outputDIR:_files -/'
                    ;;
                batch)
                    _arguments \
                        '(--configFile -f)-f[plain text config file]:config-file:_files' \
                        '(--configFile -f)--configFile[plain text config file]:config-file:_files' \
                        '(--channelList -c)-c[Comma-separated list of channel, eg: -c huawei,xiaomi]:channel-list:(huawei,xiaomi)' \
                        '(--channelList -c)--channelList[Comma-separated list of channel, eg: -c huawei,xiaomi]:channel-list:(huawei,xiaomi)' \
                        '(--extraInfo -e)-e[Comma-separated list of key=value info, eg: -e time=1,type=android]:extra-info:(time=1,type=android)' \
                        '(--extraInfo -e)--extraInfo[Comma-separated list of key=value info, eg: -e time=1,type=android]:extra-info:(time=1,type=android)' \
                        ':inputFile:_files -g "*.apk"' \
                        '::outputDIR:_files -/'
                    ;;
                *);;
            esac
            ;;
        *);;
    esac
}

_walle "$@"
